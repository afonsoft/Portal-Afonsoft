@using Abp.Web.Mvc.Alerts
@using Afonsoft.Portal.Localization
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppLogo
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppTheme3Brand
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppMenu
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppSubscriptionBar
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppTheme3Footer
@using Afonsoft.Portal.Web.Areas.App.Views.Shared.Components.AppTopBar

@inject IAlertManager AlertManager
@{
    Layout = "~/Areas/App/Views/Layout/_Layout.cshtml";
    var theme = await GetTheme();
}

@section Styles{
    <link rel="stylesheet" href="@(ApplicationPath)metronic/themes/theme3/css/style.bundle@(CultureHelper.IsRtl ? ".rtl":"").css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/Common/Styles/Themes/theme3/metronic-customize.css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/Common/Styles/Themes/theme3/datatables@(CultureHelper.IsRtl ? "-rtl":"").css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/fonts/fonts-montserrat.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", false)
}

@section Scripts{
    <script abp-src="/metronic/themes/theme3/js/layout.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", false)
}

<div id="kt_header_mobile" class="kt-header-mobile">
    <div class="kt-header-mobile__logo">
        <a href="@Url.Action("Index", "Home", new {area = string.Empty})">
            @await Component.InvokeAsync(typeof(AppLogoViewComponent))
        </a>
    </div>
    <div class="kt-header-mobile__toolbar">
        <button class="kt-header-mobile__toolbar-toggler kt-header-mobile__toolbar-toggler--left" id="kt_aside_mobile_toggler">
            <span></span>
        </button>
        <button class="kt-header-mobile__toolbar-topbar-toggler" id="kt_header_mobile_topbar_toggler">
            <i class="flaticon-more"></i>
        </button>
    </div>
</div>

<div class="kt-grid kt-grid--hor kt-grid--root">
    <div class="kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver">
        <!-- BEGIN: Left Aside -->
        <button class="kt-aside-close" id="kt_aside_close_btn">
            <i class="la la-close" aria-label="@L("Close")"></i>
        </button>
        <div id="kt_aside" class="kt-aside kt-aside--fixed kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop">
            <!-- BEGIN: Brand -->
            @await Component.InvokeAsync(typeof(AppTheme3BrandViewComponent))
            <!-- END: Brand -->
            <!-- BEGIN: Aside Menu -->
            <div id="kt_aside_menu_wrapper" class="kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid">
                @await Component.InvokeAsync(typeof(AppMenuViewComponent), new { currentPageName = ViewBag.CurrentPageName, isLeftMenuUsed = true })
            </div>
            <!-- END: Aside Menu -->
        </div>
        <!-- END: Left Aside -->
        <div class="kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-wrapper" id="kt_wrapper">
            <!-- BEGIN: Header -->
            <div class="kt-header kt-grid__item  kt-header--fixed" id="kt_header">
                <div class="kt-header-menu-wrapper" id="kt_header_menu_wrapper">
                </div>
                @await Component.InvokeAsync(typeof(AppTopBarViewComponent))
            </div>
            <!-- END: Header -->
            <div class="d-lg-none p-3 mobile-subscription-warning">
                @await Component.InvokeAsync(typeof(AppSubscriptionBarViewComponent))
            </div>
            @if (AlertManager.Alerts.Any())
            {
                <div id="AbpPageAlerts">
                    @foreach (var alertMessage in AlertManager.Alerts)
                    {
                        <div class="alert alert-@alertMessage.Type.ToString().ToLower()" role="alert">
                            <div class="alert-text">
                                <h4 class="alert-heading">
                                    @alertMessage.Title
                                    @if (alertMessage.Dismissible)
                                    {
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    }
                                </h4>
                                <p>@alertMessage.Text</p>
                            </div>
                        </div>
                    }
                </div>
            }

            <div class="kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor">
                @RenderBody()
            </div>
            @await Component.InvokeAsync(typeof(AppTheme3FooterViewComponent))
        </div>
    </div>
</div>